class Snake{constructor(size,startPosX=Generator.position(),startPosY=Generator.position()){this.size=size,this.posx=startPosX,this.posy=startPosY,this.tail=[],this.xVelocity=0,this.yVelocity=0,this.total=1}eat(apple){return this.posx==apple.posx&&this.posy==apple.posy&&(this.tail.push({posx:this.posx,posy:this.posy}),this.total++,!0)}setColors(firstColor,secondColor){this.firstColor=firstColor,this.secondColor=secondColor}controlsARROWS(keyCode){switch(keyCode){case 37:1!=this.xVelocity&&(this.xVelocity=-1,this.yVelocity=0);break;case 38:1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=-1);break;case 39:-1!=this.xVelocity&&(this.xVelocity=1,this.yVelocity=0);break;case 40:-1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=1)}}controlsWSAD(keyCode){switch(keyCode){case 65:1!=this.xVelocity&&(this.xVelocity=-1,this.yVelocity=0);break;case 87:1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=-1);break;case 68:-1!=this.xVelocity&&(this.xVelocity=1,this.yVelocity=0);break;case 83:-1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=1)}}controlsBOTH(keyCode){switch(keyCode){case 65:case 37:1!=this.xVelocity&&(this.xVelocity=-1,this.yVelocity=0);break;case 87:case 38:1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=-1);break;case 68:case 39:-1!=this.xVelocity&&(this.xVelocity=1,this.yVelocity=0);break;case 83:case 40:-1!=this.yVelocity&&(this.xVelocity=0,this.yVelocity=1)}}setControls(controls="ARROWS"){delete this.changeDirection,"ARROWS"==controls?this.changeDirection=this.controlsARROWS:"WSAD"==controls?this.changeDirection=this.controlsWSAD:"BOTH"==controls&&(this.changeDirection=this.controlsBOTH)}draw(ctx){this.tail.forEach((piece,idx)=>{ctx.fillStyle=idx%2==0?this.firstColor:this.secondColor,ctx.fillRect(piece.posx,piece.posy,this.size,this.size)})}move(){this.posx+=this.xVelocity*this.size,this.posy+=this.yVelocity*this.size}tailMove(){this.tail.pop(),this.tail.unshift({posx:this.posx,posy:this.posy})}wallCross(ctxSize){this.posx>ctxSize-this.size?this.posx=0:this.posx<0&&(this.posx=ctxSize-this.size),this.posy>ctxSize-this.size?this.posy=0:this.posy<0&&(this.posy=ctxSize-this.size)}checkCollision(){let result=!1;return this.tail.forEach((obj,idx)=>{0!=idx&&this.posx==obj.posx&&this.posy==obj.posy&&(result=!0)}),result}}